#################################################################
# Requires Office 2007 SP2 or higher
# Requires python for win32 extension
#
# Author: Ma Liang
# Date: 2012-05-06
# Version: 1.0
#
#################################################################

import sys, os
from win32com.client import Dispatch, constants, gencache
p = Dispatch("PowerPoint.Application")
w = Dispatch("Word.Application")
excelSource = Dispatch("Excel.Application")

def usage():
	sys.stderr.write ("doc2pdf.py input [output]")
	sys.exit(2)

#powerpoint convert pdf file
def ppt2pdf(input,output):
  # p = Dispatch("PowerPoint.Application")
  p.Visible = True
  try:
    print input
    pptFile = p.Presentations.Open(input)
    print 'open ppt successful!'
    pptFile.SaveAs(output)
    #pptFile.ExportAsFixedFormat(output,17)
    print 'powerpoint file convert successful!'
    return 0
  except:
    print 'powerpoint file convert failed!'
    return 1
  finally:
    # p.Quit()
    pass

#word convert pdf file
def doc2pdf(input, output):
  
  try:
    doc = w.Documents.Open(input, ReadOnly = 1)
    doc.ExportAsFixedFormat(output, constants.wdExportFormatPDF, 
      Item = constants.wdExportDocumentWithMarkup, CreateBookmarks = constants.wdExportCreateHeadingBookmarks)
    print 'word file convert successful!'
    return 0
  except Exception as e:
    print e.args
    print 'word file convert failed!'
    return 1
  finally:
    # w.Quit(constants.wdDoNotSaveChanges)
    pass
#excel convert pdf file
def excel2pdf(input, output):
  
  try:
    excel = excelSource.Workbooks.Open(input,ReadOnly = 1)
    xlTypePDF = 0;
    xlQualityStandard = 0;
    excel.ExportAsFixedFormat(xlTypePDF,output)
    print 'excel file convert successful!'
    return 0
  except:
    print 'excel file convert failed!'
    return 1
  finally:
    # excel.Quit()
    pass

# Generate all the support we can.
def GenerateSupport():
  # enable python COM support for Word 2007
  # this is generated by: makepy.py -i "Microsoft Word 12.0 Object Library"
  gencache.EnsureModule('{00020905-0000-0000-C000-000000000046}', 0, 8, 4)

def main():
  # if (len(sys.argv) == 2):
  #   input = sys.argv[1]
  #   output = os.path.splitext(input)[0]+'.pdf'
  # elif (len(sys.argv) == 3):
  #   input = sys.argv[1]
  #   output = sys.argv[2]
  # else:
  #   usage()
  # if (not os.path.isabs(input)):
  #   input = os.path.abspath(input)
  # if (not os.path.isabs(output)):
  #   output = os.path.abspath(output)
  
  try:
    GenerateSupport()
    for root, dirs, files in os.walk(os.getcwd()):
      print root
      for file in files:
        input = os.path.join(root, file);
        output = os.path.splitext(input)[0]+'.pdf'
        shortLastName = input[-3:]
        longLastName = input[-4:]
        if shortLastName == 'xls' or longLastName == 'xlsx':
          rc = excel2pdf(input, output)
        elif shortLastName == 'doc' or longLastName == 'docx':
          rc = doc2pdf(input,output)
        elif shortLastName == 'ppt' or longLastName == 'pptx':
          rc = ppt2pdf(input,output)
        
  except Exception as e:
    print "Error happened!"
    raise
    return -1
  finally:
    p.Quit()
    w.Quit(constants.wdDoNotSaveChanges)
    excelSource.Quit()

if __name__=='__main__':
	rc = main()
	